<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:visuals="clr-namespace:NP.Visuals"
                    xmlns:utils="clr-namespace:NP.Visuals.Utils"
                    xmlns:converters="clr-namespace:NP.Visuals.Converters"
                    xmlns:visualControls="clr-namespace:NP.Visuals.Controls">
    <Style x:Key="BaseControlStyle"
           TargetType="Control">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
    </Style>

    <Style TargetType="visualControls:LabelContainer">
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="visualControls:LabelContainer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="Stretch"
                            Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding TheLabel}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="visualControls:LabeledControl"
           x:Key="TheBaseLabelControl">
        <Setter Property="Padding"
                Value="5, 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="visualControls:LabeledControl">
                    <Grid VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid  Width="{TemplateBinding LabelPartWidth}">
                            <TextBlock x:Name="TheLabel"
                                       Text="{TemplateBinding TheLabel}"
                                       Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Foreground="{Binding Path=Foreground,
                                                    RelativeSource={RelativeSource AncestorType=visuals:LabeledControl}}"/>
                        </Grid>
                        <ContentControl ContentTemplate="{TemplateBinding TheValueTemplate}"
                                        Content="{TemplateBinding TheValue}"
                                        Grid.Column="1"
                                        Margin="5,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TheTextLabeledControl"
           TargetType="visualControls:LabeledControl"
           BasedOn="{StaticResource TheBaseLabelControl}">
        <Setter Property="TheValueTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" 
                               Foreground="{Binding Path=Foreground,
                                                    RelativeSource={RelativeSource AncestorType=visuals:LabeledControl}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ToggleButton"
           x:Key="IconToggleButtonStyle">
        <Setter Property="Background"
                Value="DarkGray" />
        <Setter Property="BorderBrush"
                Value="DarkGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Path HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Stretch="Fill"
                                  Margin="{TemplateBinding Padding}"
                                  Data="{x:Static utils:Icons.EditIcon}"
                                  Fill="{TemplateBinding Foreground}" />
                        </Border>
                        <Grid x:Name="OpacityGrid"
                              Background="White"
                              Opacity="0.3" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="OpacityGrid"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="BorderBrush"
                        Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SelectableItemControlStyle"
           TargetType="visualControls:SelectableItemControl">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="visualControls:SelectableItemControl">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <CheckBox IsChecked="{Binding Path=IsItemSelected, 
                                                                  Mode=TwoWay, 
                                                                  RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Margin="{TemplateBinding CheckBoxMargin}"
                                  Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemsControlWithScrollViewerStyle"
           TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                  VerticalScrollBarVisibility="Auto">
                        <ItemsPresenter x:Name="PART_Host" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalGridSplitter"
           TargetType="GridSplitter">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="5" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0"
                                     EndPoint="0.5,1">
                    <GradientStop Offset="0"
                                  Color="Transparent" />
                    <GradientStop Offset="0.39999"
                                  Color="Transparent" />
                    <GradientStop Offset="0.4"
                                  Color="Black" />
                    <GradientStop Offset="0.6"
                                  Color="Black" />
                    <GradientStop Offset="0.60001"
                                  Color="Transparent" />
                    <GradientStop Offset="1"
                                  Color="Transparent" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalGridSplitter"
           TargetType="GridSplitter">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Width"
                Value="5" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5"
                                     EndPoint="1,0.5">
                    <GradientStop Offset="0"
                                  Color="Transparent" />
                    <GradientStop Offset="0.39999"
                                  Color="Transparent" />
                    <GradientStop Offset="0.3"
                                  Color="Black" />
                    <GradientStop Offset="0.7"
                                  Color="Black" />
                    <GradientStop Offset="0.60001"
                                  Color="Transparent" />
                    <GradientStop Offset="1"
                                  Color="Transparent" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextButtonStyle"
           TargetType="Button">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="#FFDDDDDD" />
        <Setter Property="BorderBrush"
                Value="#FF707070" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBackgroundBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding visuals:AttachedProps.TheCornerRadius}" />
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding visuals:AttachedProps.ContainedText}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontStretch="{TemplateBinding FontStretch}"
                                   FontStyle="{TemplateBinding FontStyle}"
                                   FontWeight="{TemplateBinding FontWeight}" />
                        <Border x:Name="MouseOverOpacityBorder"
                                CornerRadius="{TemplateBinding visuals:AttachedProps.TheCornerRadius}"
                                Background="White"
                                Opacity="0.2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="MouseOverOpacityBorder"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="visualControls:TextButton"
           BasedOn="{StaticResource TextButtonStyle}" />

    <!-- for NP.Concepts.ComponentFolders.ComponentDisplayMetadata class-->
    <DataTemplate x:Key="DisplayMetadataTemplate">
        <Grid x:Name="ToolBoxMetadataPanel">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Path Data="{Binding Path=Icon}"
                  Stroke="Black"
                  Stretch="Uniform"
                  Width="20"
                  Height="20"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center" />

            <TextBlock Foreground="Black"
                       Grid.Column="1"
                       Text="{Binding Path=DisplayName}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       Margin="5,0,0,0" />
        </Grid>
    </DataTemplate>

    <Style x:Key="TextBlockBase"
           TargetType="TextBlock">
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="LineHeight"
                Value="{Binding Path=FontSize, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="LineStackingStrategy"
                Value="BlockLineHeight" />
        <Setter Property="TextAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="TextBlockEmphasised"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="FontWeight"
                Value="Bold" />
    </Style>

    <Style x:Key="SectionHeader"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlockEmphasised}">
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
    </Style>
    
    <Style x:Key="ButtonIconTextStyle"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlockBase}">
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="LineHeight"
                Value="15" />
    </Style>

    <Style x:Key="ActiveControlStyle"
           TargetType="ContentControl">
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="visuals:AttachedProps.MouseOverOpacity"
                Value="0.05" />
        <Setter Property="visuals:AttachedProps.MouseOverBackground"
                Value="Black" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="#FFEDEDED" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid x:Name="MouseOverPanel"
                                  Background="{TemplateBinding visuals:AttachedProps.MouseOverBackground}"
                                  Opacity="{TemplateBinding visuals:AttachedProps.MouseOverOpacity}" />
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="MouseOverPanel"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ActiveButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource ActiveControlStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Style="{StaticResource ButtonIconTextStyle}"
                               Text="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="OpenCloseToggleButtonStyle"
           TargetType="ToggleButton"
           BasedOn="{StaticResource ActiveControlStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <TextBlock Style="{StaticResource ButtonIconTextStyle}"
                                   Text="+"
                                   Visibility="{Binding Path=IsChecked, 
                                                            Converter={x:Static converters:BoolToVisConverter.TheInverseInstance}, 
                                                            RelativeSource={RelativeSource AncestorType=ToggleButton}}" />
                        <TextBlock Style="{StaticResource ButtonIconTextStyle}"
                                   Text="-"
                                   Visibility="{Binding Path=IsChecked, 
                                                            Converter={x:Static converters:BoolToVisConverter.TheInstance}, 
                                                            RelativeSource={RelativeSource AncestorType=ToggleButton}}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid x:Name="OpacityPanel"
                              Background="Black"
                              Opacity="0.05" />
                        <Grid Margin="3"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <TextBlock Style="{StaticResource ButtonIconTextStyle}"
                                       Text="+"
                                       Visibility="{Binding Path=IsChecked, 
                                                            Converter={x:Static converters:BoolToVisConverter.TheInverseInstance}, 
                                                            RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <TextBlock Style="{StaticResource ButtonIconTextStyle}"
                                       Text="-"
                                       Visibility="{Binding Path=IsChecked, 
                                                            Converter={x:Static converters:BoolToVisConverter.TheInstance}, 
                                                            RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="OpacityPanel"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="visualControls:InOutArrowControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="visualControls:InOutArrowControl">
                    <Grid x:Name="EndPointIconPanel">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="EndPointArrowStemIcon"
                                   Width="6"
                                   Height="3"
                                   Grid.Column="0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="-2,0,0,0"
                                   Fill="{TemplateBinding Foreground}" />
                        <Path x:Name="EndPointArrowIcon"
                              Grid.Column="1"
                              Data="{x:Static utils:Icons.RightArrow}"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Fill"
                              Width="6"
                              Height="8"
                              Margin="0,0,-2,0"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIn"
                                 Value="False">
                            <Setter TargetName="EndPointArrowStemIcon"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="EndPointArrowIcon"
                                    Property="Grid.Column"
                                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>